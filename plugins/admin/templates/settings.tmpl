<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
	<title>pyTivo Web Configuration</title>
	<script language="javascript" type="text/javascript">
		function fillBlank(){
			var texts=document.getElementsByTagName('input');
			for (var i_tem = 0; i_tem < texts.length; i_tem++){
				if (texts[i_tem].value==''){
					texts[i_tem].value=' ';
				}
			}
		}
		function switchDiv(pass, type){ 
			hideallids(type);
			showDiv(pass);
		}
		function hideallids(type){
			//loop through the array and hide each element by id
			var divs = document.getElementsByTagName('div');
			for (var i=0;i<divs.length;i++){
				if(divs[i].id.match(type)){
					hideDiv(divs[i].id);
				}
			} 
		}
		function hideDiv(pass) {
			var divs = document.getElementsByTagName('div');
			for(i=0;i<divs.length;i++){
				if(divs[i].id.match(pass)){//if they are 'see' divs
					if (document.getElementById){// DOM3 = IE5, NS6
						divs[i].style.visibility="hidden";// show/hide
					}
					else{
						if (document.layers){ // Netscape 4
							document.layers[divs[i]].display = 'hidden';
						}
						else{ // IE 4
							document.all.hideshow.divs[i].visibility = 'hidden';
						}
					}
				}
			}
		}
		function showDiv(pass) {
			var divs = document.getElementsByTagName('div');
			for(i=0;i<divs.length;i++){
				if(divs[i].id == pass){
					if (document.getElementById){
						divs[i].style.visibility="";
					}
					else {
						if (document.layers){ // Netscape 4
							document.layers[divs[i]].display = '';
						}
						else{ // IE 4
							document.all.hideshow.divs[i].visibility = '';
						}
					}
				}
			}
		}
		function deleteSection(id){
			if (select_section.section.options[id].text == 'Global Server Settings'){
				alert('Delete Error:\n\nSorry the Global Server Settings Section is required for pyTivo to run and cannot be deleted');
				return true;
			}
			var name = select_section.section.options[id].text;
			var answer = confirm("Are you sure you wish to delete the '" + name + "' Section?")
			if (answer){
				switchDiv('set-delete', 'set-');
				select_section.section.options[id] = null;
				var field = document.getElementById(name).value;
				document.getElementById(field).value = 'Delete_Me';
				saveNotify();
				return true;
			}		
		}
		function resetpyTivo(){
			var answer = confirm("Are you sure you wish to reset the pyTivo Server? Any unsaved changes will be lost!")
			if (answer){
				window.location="/TiVoConnect?Command=Reset&Container=$container"
			}
		}
		function showData(form) {
			var section = ""
			var setting = ""
			re=/[\[\]<>|]/;
			inputs = form.getElementsByTagName("input");
			for (i = 0; i < inputs.length; i++){
				if (inputs[i].type == 'text' && re.exec(inputs[i].value)){
					setting = inputs[i].name;
					break;
				}
			}
			if (setting != ""){
				var map = document.getElementById('Section_Map').value.split(']');
				map.pop();
				splitSetting = setting.split('.');
				for(i=0;i<map.length;i++){
					key = map[i].split('|');
					//buffer += key[0] + "---" + key[1] + "===" + splitSetting[0] + "\n";
					if (splitSetting[0] == 'Server'){
						section = 'server';
						break;
					}
					if (key[0] == splitSetting[0]){
						section = key[1];
						break;
					}
				}
				alert("Invalid Entry:\nSorry these are not allowed \n[]<>|");
				switchDiv('set-' + section, 'set-');
				document.getElementById(setting).select();
				return false;
			}
			fillBlank();
			document.config.submit();
		}
		function saveNotify(){
			document.getElementById('B1').style.fontWeight= 'bold';
			document.getElementById('B2').disabled = true;
		}
	</script>
</head>
<body style="background-color: rgb(250, 250, 250);">

<p align="center"><font size="6">pyTivo Web
Configuration</font> <a href="javascript:switchDiv('help-instructions', 'help-');">help</a></p>
<center>
<table style="border: 1px solid rgb(220, 220, 220);background-color: rgb(255, 255, 255);text-align: left; margin-left: auto; margin-right: auto;" border="0" cellpadding="0" cellspacing="4">

  <tbody>

    <tr>

      <td style="border-right: 1px dotted rgb(153, 153, 153); vertical-align: top;">
      <div id="leftframe" style="position: relative; text-align: center; width: 200px;">
      <form name="select_section">Sections
        <select name="section" size="7">
        <option value="set-server">Global Server Settings</option>
#for $name, $data in $shares_data
	<option value="set-$name">$name</option>
#end for
#for $name, $data in $tivos_data
	<option value="set-$name">$name</option>
#end for
        </select>

        <input name="B3" value="Edit Section" type="button" onclick="switchDiv(select_section.section.options[select_section.section.selectedIndex].value, 'set-');return true;"> 
        <input name="B4" value="Delete Section" type="button" onclick="deleteSection(select_section.section.selectedIndex)">
        <input name="B5" value="Add Section" type="button" onclick="switchDiv('set-add', 'set-');return true;"></form>

      <hr>Administration
      <form method="post">
        <p align="center"><input name="B1" id="B1" value="Save Changes" type="button" onclick="showData(document.config);return true;">
        <input id="B2" name="B2" value="Soft Reset pyTivo" type="button" onclick="resetpyTivo();"></p>

      </form>

<a href="javascript:alert('This feature is not available yet');">View Raw File</a> </div>

      </td>

      <td style="vertical-align: top;">
      <div id="settings" style="width: 300px; overflow: scroll; height: 450px; position: relative;">
      <form name="config" method="GET" action="TiVoConnect" onsubmit="fillBlank();showData(this);">
      <input type="hidden" name="Command" value="UpdateSettings">
      <input type="hidden" name="Container" value="$container">
<div id="set-server" style="width: 280px; text-align: center;position: absolute; left: 0px; top: 0px; visibility: hidden;">
	<b>Global Server Settings</b><br>
        <hr style="width: 100%; height: 2px;"> 
        <table align="center">
#set $i = 0
#for $key in $server_known
#set $i += 1
#if $i%2
<tr style="background-color: rgb(250, 250, 250);">
#else
<tr>
#end if
<td>
#if $key in $server_data
        $key :</td><td><input size="20" id="Server.$key" name="Server.$key" value="$server_data[$key]" onChange="saveNotify();" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">

#else
        $key :</td><td><input size="20" id="Server.$key" name="Server.$key" value="" onChange="saveNotify();" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">

#end if
</td></tr>
#end for
<tr><td colspan="2" align="center" style="border-bottom: 1px solid rgb(153, 153, 153);">User Defined Settings:</td></tr>        
#set $i = 0
#for $key in $server_data 
	#if not $key in $server_known
		#set $i += 1
		#if $i%2
			<tr style="background-color: rgb(250, 250, 250);">
		#else
			<tr>
		#end if
		<td>         $key :</td><td>
	        <input size="20" id="Server.$key" name="Server.$key" value="$server_data[$key]" onChange="saveNotify();" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">
		</td></tr>
	#end if 
#end for 
	</table>
	<div style="width: 280px; position: relative;">
		<div id="add-server-button" style="width: 280px; position: absolute; position: absolute; left: 0px; top: 0px;">
			<br>
			<center>
			<input type="button" value="Add Setting" onclick="switchDiv('add-server-field', 'add-server-');return true;">
			</center>
		</div>
		<div id="add-server-field" style="position: absolute; position: absolute; left: 0px; top: 0px; visibility: hidden;">
			<table style="width: 265px;">
			<tr><td colspan="2" align="center" style="border-bottom: 1px solid rgb(153, 153, 153);">Add a Setting</td></tr>
			<tr><td>Setting Name:</td><td>Setting Value:</td></tr>
			<tr><td><input size="16" id="Server.new_settting" name="Server.new__setting" onChange="saveNotify();" type="text" value=""></td><td><input size="16" type="text" onChange="saveNotify();" id="Server.new_value"  name="Server.new__value" value=""></td></tr>
			</table>
		</div>
	</div>
</div>
#set $section_count = 0
#set $section_map = ''
#for $name, $data in $shares_data
	#set $section_count += 1
	#set $section_number = 'section-' + str($section_count)
	<input type="hidden" name="$name" id="$name" value="$section_number">
	#set $section_map += $section_number + '|' + $name + ']'
	<div id="set-$name" style="text-align: center;position: absolute; left: 0px; top: 0px; visibility: hidden;">
	[<input size="20" onChange="saveNotify();" id="$section_number" name="$section_number" value="$name">]<br>
	<hr style="width: 100%; height: 2px;"><table align="center">
	#set $i = 0
	#for $key in $shares_known
		#set $i += 1
		#if $i%2
			<tr style="background-color: rgb(250, 250, 250);">
		#else
			<tr>
		#end if
		#if $key in $data
			<td>$key :</td><td><input onChange="saveNotify();" size="20" id="$section_number.$key" name="$section_number.$key" value="$data[$key]" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">
			</td>
		#else
			<td>$key : </td><td><input onChange="saveNotify();" size="20" id="$section_number.$key" name="$section_number.$key" value="" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">
			</td>
		#end if
		</tr>
	#end for

	<tr><td colspan="2" align="center" style="border-bottom: 1px solid rgb(153, 153, 153);">User Defined Settings:</td></tr> 
	#set $i = 0
	#for $key in $data 
		#if not $key in $shares_known
			#set $i += 1
			#if $i%2
				<tr style="background-color: rgb(250, 250, 250);">
			#else
				<tr>
			#end if
			<td> $key : </td><td>
			<input size="20" onChange="saveNotify();" id="$section_number.$key" name="$section_number.$key" value="$data[$key]" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">
			</td></tr>
		#end if 
	#end for
	</table>
		<div style="position: relative;">
			<div id="add-$name-button" style="width: 280px; position: absolute; position: absolute; left: 0px; top: 0px;">
				<br>
				<center>
				<input type="button" value="Add Setting" onclick="switchDiv('add-$name-field', 'add-$name-');return true;">
				</center>
			</div>
			<div id="add-$name-field" style="position: absolute; position: absolute; left: 0px; top: 0px; visibility: hidden;">
				<table style="width: 265px;">
				<tr><td colspan="2" align="center" style="border-bottom: 1px solid rgb(153, 153, 153);">Add a Setting</td></tr>
				<tr><td>Setting Name:</td><td>Setting Value:</td></tr>
				<tr><td><input onChange="saveNotify();" size="16" id="$(section_number).new__setting" name="$(section_number).new__setting" type="text" value=""></td><td><input onChange="saveNotify();" size="16" type="text" id="$(section_number).new__value" name="$(section_number).new__value" value=""></td></tr>
				</table>
			</div>
		</div>
	</div>
#end for

#for $name, $data in $tivos_data
	#set $section_count += 1
	#set $section_number = 'section-' + str($section_count)
	<input type="hidden" name="$name" id="$name" value="$section_number">
	#set $section_map += $section_number + '|' + $name + ']'
	<div id="set-$name" style="text-align: center;position: absolute; left: 0px; top: 0px; visibility: hidden;">
	[<input size="20" onChange="saveNotify();" id="$section_number" name="$section_number" value="$name">]<br>
	<hr style="width: 100%; height: 2px;"><table align="center">
	#set $i = 0
	#for $key in $tivos_known
		#set $i += 1
		#if $i%2
			<tr style="background-color: rgb(250, 250, 250);">
		#else
			<tr>
		#end if
		#if $key in $data
			<td>$key :</td><td><input onChange="saveNotify();" size="20" id="$section_number.$key" name="$section_number.$key" value="$data[$key]" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">
			</td>
		#else
			<td>$key :</td><td><input onChange="saveNotify();" size="20" id="$section_number.$key" name="$section_number.$key" value="" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">
			</td>
		#end if
		</tr>
	#end for

	<tr><td colspan="2" align="center" style="border-bottom: 1px solid rgb(153, 153, 153);">User Defined Settings:</td></tr> 
	#set $i = 0
	#for $key in $data 
		#if not $key in $tivos_known
			#set $i += 1
			#if $i%2
				<tr style="background-color: rgb(250, 250, 250);">
			#else
				<tr>
			#end if
			<td> $key :</td><td> 
			<input size="20" onChange="saveNotify();" id="$section_number.$key" name="$section_number.$key" value="$data[$key]" onfocus="switchDiv('help-$key', 'help-');return true;" type="text">
			</td></tr>
		#end if 
	#end for
	</table>
		<div style="position: relative;">
			<div id="add-$name-button" style="width: 280px; position: absolute; position: absolute; left: 0px; top: 0px;">
				<br>
				<center>
				<input type="button" value="Add Setting" onclick="switchDiv('add-$name-field', 'add-$name-');return true;">
				</center>
			</div>
			<div id="add-$name-field" style="position: absolute; position: absolute; left: 0px; top: 0px; visibility: hidden;">
				<table style="width: 265px;">
				<tr><td colspan="2" align="center" style="border-bottom: 1px solid rgb(153, 153, 153);">Add a Setting</td></tr>
				<tr><td>Setting Name:</td><td>Setting Value:</td></tr>
				<tr><td><input onChange="saveNotify();" size="16" id="$(section_number).new__setting" name="$(section_number).new__setting" type="text" value=""></td><td><input onChange="saveNotify();" size="16" type="text" id="$(section_number).new__value" name="$(section_number).new__value" value=""></td></tr>
				</table>
			</div>
		</div>
	</div>
#end for
<div id="set-add" style="text-align: center;position: absolute; left: 0px; top: 0px; visibility: hidden;">
	Add a New Section
	<hr>
	<table>
	<tr>
	<td> Section Name :</td><td> 
		<input onChange="saveNotify();" type="text" size="20" name="new_Section" value="" onfocus="switchDiv('help-add', 'help-');return true;">
	</td></tr></table>
	The new section name will be added to the pyTivo.conf file when you click <b>Save Changes</b>.
</div>
<div id="set-delete" style="text-align: center;position: absolute; left: 0px; top: 0px; visibility: hidden;">
	Delete a Section
	<hr>
	<br>
	The Section has been marked for deletion. However it will not be actually deleted until you click the <b>Save Changes</b> button.
</div>
<input type="hidden" id="Section_Map" name="Section_Map" value="$section_map">
      </form>

      </div>

      </td>

      <td style="border-left: 1px dotted rgb(153, 153, 153); vertical-align: top;">
      <div id="sidesections" style="width: 400px; position: relative;"><!-- HELP SECTIONS -->
      <div id="help-instructions" style="visibility: visible; width: 400px; overflow: scroll; height: 450px; position: absolute; left: 0px; top: 0px;">
      <p align="center"><strong>Instructions</strong>
      </p>
      <b>To Edit a Share:</b><br>
      Select the share in the left hand menu and click edit.<br><br>
      
      <b>To Delete a Share</b><br>
      Select the share in the left hand menu and click delete.<br><br>
      
      <b>To Add a Section</b><br>
      Click the add share button.  Then provide the name of the share or TiVo. You must save your 
      changes before you can edit settings in the new share.<br><br>
      
      <b>To Add a Setting</b><br>
      Select you share first.  If the setting is a known setting simply add the value to the appropriate setting.
      If the setting is not listed you can add a "User Defined Setting".  Simple click add setting and provide
      the name and value of this new setting.<br><br>
      
      <b>To Delete a Setting</b><br>
      Delete the value of the setting so that it is blank.  If this is a known share the name will remain after a save.
      If the setting is a user defined setting the name will be deleted after the save.<br><br>
      
      <b>Save Settings</b><br>
      Clicking Save Settings will write your changes to the pyTivo.conf file.  These settings will not have an effect on
      your pyTivo server until it is Soft Reset or restarted.<br><br>
      
      <b>Soft Reset</b><br>
      Soft Reset allows your new settings to take effect without manually restarting the TiVo.  The Soft Reset will cause
      a re-read of the pyTivo.conf file so your changes must be saved to the file before the reset.  <b>Note:</b> The only
      setting that will not take effect until a hard restart is the Port setting.  Changing the Port setting requires a full
      restart.      
      </div>

	<div id="help-add" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>Add a New Section</strong> </p>

      <p> Add the name of a new section.<br>

      Remember if you want to add TiVo section remember it must start with _tivo_<br>

      You must save your settings before the new section will be editable.<br>
	</p>

      </div>

      <div id="help-port" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>port</strong> </p>

      <p> <strong>Default Setting:</strong> None,
must be entered. Distributed conf file uses 9032<br>

      <strong>Valid Entries:</strong> Valid port number<br>

      <strong>Required:</strong> Yes, without a port
setting in the conf file pyTivo will not start.<br>

      <strong>Skill:</strong> Basic<br>

      <strong>Description:</strong> The port which pyTivo
uses to serve your files. Can be changed if it conflicts with another
program. It is reported on Ubuntu that this port is already used so you
may need to change it to something like port=9254.<br>

      <strong>Example Settings:</strong> 9032 </p>

      </div>

      <div id="help-guid" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>guid</strong> </p>

      <p> <strong>Default Setting:</strong> 123456<br>

      <strong>Valid Entries:</strong> Any 6 digit number<br>

      <strong>Required:</strong> Generally NO, will default
to '123456' if left blank. If you use more than one pyTivo server on
the same network a different random number is required here.<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> A unique identifier
used in the beacon to identify this server. If you have 2 or more
pyTivo servers on one network each server must use its own unique
identifier.<br>

      <strong>Example Settings:</strong> Any 6 digit
number. </p>

      </div>

      <div id="help-ffmpeg" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>ffmpeg</strong>
      </p>

      <p> <strong>Default Setting:</strong> There is
none.<br>

      <strong>Valid Entries:</strong> Operating system path<br>

      <strong>Required:</strong> Yes! <br>

      <strong>Skill:</strong> Basic<br>

      <strong>Description:</strong> This is the full path
to your ffmpeg binary. For windows users ffmpeg is distributed with
pyTivo and is in the plugins/video folder<br>

      <strong>Example Settings:</strong> <span class="underline">Linux</span> = /usr/bin/ffmpeg | <span class="underline">Windows</span> = c:\Program
Files\pyTivo\plugins\video\ffmpeg_mp2.exe </p>

      </div>

      <div id="help-beacon" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>beacon</strong>
      </p>

      <p> <strong>Default Setting:</strong>
255.255.255.255<br>

      <strong>Valid Entries:</strong> A Subnet or Listen<br>

      <strong>Required:</strong> No, defaults to
255.255.255.255<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> The subnet which the
beacon should broadcast on. Most people can leave this at the default
setting. If set to listen will accept incoming TCP requests.<br>

      <strong>Example Settings:</strong> 255.255.255.255 </p>

      </div>

      <div id="help-hack83" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>hack83</strong>
      </p>

      <p> <strong>Default Setting:</strong> False<br>

      <strong>Valid Entries:</strong> True/False<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Moderate<br>

      <strong>Description:</strong> Available in the <a class="wiki" href="/wiki/SubFoldersBranch">SubFoldersBranch</a>.
Allows TiVos with software 8.3 and above to display subfolders as users
are accustomed too prior to the 8.3Software glitch. If you use this
then you don't need to use <a href="http://pytivo.armooo.net/wiki/ConfigurepyTivo#auto_subshares">auto_subshares</a>.
      <strong>Warning:</strong> navigating folders too fast
with this setting enabled may cause <a class="wiki" href="/wiki/TiVo">TiVo</a> to reboot. <br>

      <strong>Example Settings:</strong> True/False </p>

      </div>

      <div id="help-debug" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>debug</strong>
      </p>

      <p> <strong>Default Setting:</strong> False<br>

      <strong>Valid Entries:</strong> True/False<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> Will create a file
named debug.txt in the base folder of pyTivo. This file will contain
debug information helpful in diagnosing problems. Generally only
necessary if you are having a problem and the information is requested
by support staff.<br>

      <strong>Example Settings:</strong> True/False </p>

      </div>

      <div id="help-optres" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>optres</strong>
      </p>

      <p> <strong>Default Setting:</strong> False<br>

      <strong>Valid Entries:</strong> True/False<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Moderate<br>

      <strong>Description:</strong> Allows for the use of
the Optimal Resolution in transcoding. By setting optes = true pyTivo
will treat the <a href="http://pytivo.armooo.net/wiki/ConfigurepyTivo#height">height</a>
and <a href="http://pytivo.armooo.net/wiki/ConfigurepyTivo#width">width</a>
settings in the conf file as a maximum. If the video to be transcoded
has smaller dimensions that are closer to other acceptable TiVo
dimensions then pyTivo will use these dimensions. This allows for
faster transcoding and small files when the initial video is a lower
quality.  pyTivo uses the same resolution as the source file on
HD Tivos for optimal transcoding efficiency.  It is not necessay to
to set this option with HD TiVos unles you wish to force pyTivo to change
the resolution to an "S2 compatible" resolution.<br>

      <strong>Example Settings:</strong> True/False </p>

      </div>

      <div id="help-audio_br" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>audio_br</strong>
      </p>

      <p> <strong>Default Setting:</strong> 384K<br>

      <strong>Valid Entries:</strong> Any valid Bit rate up to 448k.<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> This allows you to
choose the default audio bit rate used for transcoding. The
default is likely fine for most users.  384k is the minimum
recommended for ac3 audio. For S2 Tivos, you may want to lower
this setting to 192k and set audio_ch=2 to slightly reduce the
file size.  See audio_codec for more info.<br>

      <strong>Example Settings:</strong> 192K, 384K, 448K. </p>

      </div>

      <div id="help-max_audio_br" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>max_audio_br</strong>
      </p>

      <p> <strong>Default Setting:</strong> 448K<br>

      <strong>Valid Entries:</strong> Any valid Bit rate. <br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> This sets the maximum
audio bit rate that can be sent to the <a class="wiki" href="/wiki/TiVo">TiVo</a>. Files having a higher bit
rate will be transcoded to ensure <a class="wiki" href="/wiki/TiVo">TiVo</a> compatibilty. <br>

      <strong>Example Settings:</strong> 384K, 448K. </p>

      </div>

      <div id="help-video_br" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>video_br</strong>
      </p>

      <p> <strong>Default Setting:</strong> 4096K
for SD <a class="wiki" href="/wiki/TiVo">TiVo</a>'s,
8192K for HD <a class="wiki" href="/wiki/TiVo">TiVo</a>'s<br>

      <strong>Valid Entries:</strong> Any valid Bit rate.
1024K = 1Mi<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> This allows you to
choose the default server video bit rate used in transcoding. FFmpeg
does not strictly follow this bit rate, there is a certain level of
tolerance that is allowed. Also a low quality file will always have a
low bit rate. The default is likely fine for most users. Higher values
may slow down transcoding and will increase the file size. Increased
file sizes take up more room on the <a class="wiki" href="/wiki/TiVo">TiVo</a> and take longer to transfer
over the network.<br>

      <strong>Example Settings:</strong> 4096K, 8Mi, 12Mi </p>

      </div>

      <div id="help-max_video_br" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>max_video_br</strong>
      </p>

      <p> <strong>Default Setting:</strong> 17408k<br>

      <strong>Valid Entries:</strong> Any valid Bit rate.
1024K = 1Mi<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> This allows you to
choose the maximum bit rate and is more strict than the <a href="http://pytivo.armooo.net/wiki/ConfigurepyTivo#video_br">video_br</a>
setting above. However setting this can cause buffer overflows and can
cause issues with ffmpeg. In addition to setting the ffmpeg maxrate
option, this setting is used to determine if the video bitrate of the
source video file is too high for the <a class="wiki" href="/wiki/TiVo">TiVo</a>. Otherwise compatible
mpeg's with a video bitrate above this setting will be transcoded
rather than sent to the <a class="wiki" href="/wiki/TiVo">TiVo</a>
untouched. Raising this setting much higher than the default will likly
result in pixelation during playback. Recommended only for skilled
users. <strong>Note:</strong> there is a report that
ffmpeg throws an error with 17Mi but accepts 17408K just fine. <br>

      <strong>Example Settings: 17408k</strong> </p>

      </div>

      <div id="help-width" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>width</strong>
      </p>

      <p> <strong>Default Setting:</strong> 544<br>

      <strong>Valid Entries:</strong> Any valid pixel
dimension. Setting will be rounded to nearest acceptable <a class="wiki" href="/wiki/TiVo">TiVo</a>
dimension<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Moderate<br>

      <strong>Description:</strong> Allows you to choose
the output dimension of the transcoded videos. SD units are limited to
544 and below. Likely HD users will want to choose a higher value.
Higher values may slow down transcoding and will increase the file
size. Increased file sizes take up more room on the TiVo and take
longer to transfer over the network.<br>

      <strong>Example Settings:</strong> 1920, 1440, 1280,
720, 704, 544, 480, 352. </p>

      </div>

      <div id="help-height" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>height</strong>
      </p>

      <p> <strong>Default Setting:</strong> 480<br>

      <strong>Valid Entries:</strong> Any valid pixel
dimension. Setting will be rounded to nearest acceptable <a class="wiki" href="/wiki/TiVo">TiVo</a>
dimension<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Moderate<br>

      <strong>Description:</strong> Allows you to choose
the output dimension of the transcoded videos. SD units are limited to
480 and below. Likely HD users will want to choose a higher value.
Higher values may slow down transcoding and will increase the file
size. Increased file sizes take up more room on the TiVo and take
longer to transfer over the network.<br>

      <strong>Example Settings:</strong> 1080, 720, 480 </p>

      </div>

      <div id="help-ffmpeg_pram" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>ffmpeg_pram</strong>
      </p>

      <p> <strong>Default Setting: </strong> blank<br>

      <strong>Valid Entries:</strong> A valid ffmpeg command<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Very Advanced<br>

      <strong>Description:</strong> This allows you to append
additional raw ffmpeg commands to the ffmpeg template.  For example,
you would enter '-threads 2' here if you have multiple processors
and want ffmpeg to use both processors to speed up transcoding.<br>

      <strong>Example Settings:</strong> -threads 2</p>

      </div>

      <div id="help-ffmpeg_tmpl" style="position: absolute; overflow: scroll; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>ffmpeg_tmpl</strong>
      </p>

      <p> <strong>Default Setting:</strong> "%(video_codec)s %(video_fps)s
%(video_br)s %(max_video_br)s %(buff_size)s %(aspect_ratio)s -comment
pyTivo.py %(audio_br)s %(audio_fr)s %(audio_ch)s %(audio_codec)s
%(fmpeg_pram)s %(format)s<br>

      <strong>Valid Entries:</strong> A valid ffmpeg command<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Very Advanced<br>

      <strong>Description:</strong> This is a template used by pyTivo
to control the parameters passed to ffmpeg.  It should
not be necessary to modify this template unless there is a particular
parameter you do not wish ffmpeg to use and it cannot be overridden
by specifying that parameter in the pyTivo.conf file.<br>
      <strong>Example Settings:</strong> See Above and the forum. </p>

      </div>

      <div id="help-bufsize" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>bufsize</strong>
      </p>

      <p> <strong>Default Setting:</strong> 1024k<br>

      <strong>Valid Entries:</strong> Any valid byte size<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Very Advanced<br>

      <strong>Description:</strong> Allows you to set the
buffer size used by ffmpeg. I don't know much about this setting, but
from what I can tell it is rather touchy and should only be edited by
advanced users.<br>

      <strong>Example Settings:</strong> 1024k<br>

      </p>

      </div>

      <div id="help-type" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>type</strong> </p>

      <p> <strong>Default Setting:</strong> None<br>

      <strong>Valid Entries:</strong> Video, Music, or any
other valid plugin name.<br>

      <strong>Required:</strong> Yes<br>

      <strong>Skill:</strong> Basic<br>

      <strong>Description:</strong> Sets the type of share
that this will be. This must be set to something otherwise pyTivo will
not start.<br>

      <strong>Example Settings:</strong> Video or Music </p>

      </div>

      <div id="help-path" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>path</strong> </p>

      <p> <strong>Default Setting:</strong> None<br>

      <strong>Valid Entries:</strong> Any operating system
path<br>

      <strong>Required:</strong> Yes<br>

      <strong>Skill:</strong> Basic<br>

      <strong>Description:</strong> Sets the base path to
your media content. While pyTivo will start with an invalid path your
shares will not work at all.<br>

      <strong>Example Settings:</strong> <span class="underline">Windows</span> = C:\videos | <span class="underline">Linux</span> = /home/user/media </p>

      </div>

      <div id="help-auto_subshares" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>auto_subshares</strong>
      </p>

      <p> <strong>Default Setting:</strong> false<br>

      <strong>Valid Entries:</strong> True/False<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Moderate<br>

      <strong>Description:</strong> Subfolders of the share
paths you define will be seen by pyTivo and displayed as subfolders in
the Now Playing List. This is an alternative to the <a href="http://pytivo.armooo.net/wiki/ConfigurepyTivo#hack83">hack83</a>
setting which enables the <a class="wiki" href="/wiki/SubFoldersBranch">SubFoldersBranch</a><br>

      <strong>Example Settings:</strong> True/False </p>

      </div>

      <div id="help-precache" style="position: absolute; overflow: scroll; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>precache</strong>
      </p>

      <p> <strong>Default Setting:</strong> false<br>

      <strong>Valid Entries:</strong> True/False<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Moderate<br>

      <strong>Description:</strong> In order to verify that
the video files present on your computer were compatible with ffmpeg in
older versions pyTivo would query ffmpeg for each file. While this
information was cached it still caused a delay in the initial loading
of a list of files. This precache setting forced pyTivo to inspect each
video prior to starting the pyTivo server. However, this had two
drawbacks. 1. It took time as much as two minutes before pyTivo was
ready to accept requests. 2. It did not update the cache if new files
were added while the pyTivo server was running. <br>

In the more recent releases, anything after Feb 16, 2008, pyTivo no
longer needs to query ffmpeg when creating a file list. Instead pyTivo
has a list of accepted video format extensions. If the file extension
falls within this list it is displayed on the TiVo. This achieves the
same speed increase as the precache method without the delay in loading
the pyTivo server. <br>

There are still two drawbacks to this method. 1. The video file must
have an extension that is in the list. There is a possibility that a
new video file extension could come out before pyTivo is updated. 2.
Incomplete or video files with errors will still appear in the TiVo
listing if they have the correct extension, even though they are not
valid files. Both of these concerns are minimal. 1. Very few new
formats of video files come out very often. And all extensions are
stored in the video.ext file which is easily edited. 2. When viewing
the file details before transferring the pyTivo server queries ffmpeg
to make sure it is valid. If the file is not valid it will show up as a
copyrighted file and transferring it will be prevented by TiVo. <br>

It is recommended that you leave precaching turned off as it is no
longer needed.<br>

      <strong>Example Settings:</strong> True/False </p>

      </div>

      <div id="help-aspect169" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>aspect169</strong>
      </p>

      <p> <strong>Default Setting:</strong> True<br>

      <strong>Valid Entries:</strong> True/False<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Moderate<br>

      <strong>Description:</strong> Most TiVos, even S2,
can handle 16:9 videos perfectly. Some S2s are known not to handle 16:9
and will default to false in this setting. If you are experiencing
major distortion you can try setting this to false. Likely most users
will not have to mess with this.<br>

      <strong>Example Settings:</strong> True/False </p>
      </div>

      <div id="help-video_fps" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>video_fps</strong>
      </p>

      <p> <strong>Default Setting:</strong> 29.97 for S2 Tivo, blank for S3/HD TiVo<br>

      <strong>Valid Entries:</strong> 29.97, 23.98, 25, 59.94<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> Sets the frame rate used by ffmpeg.
pyTivo uses 29.97 for S2's, and uses the same frame rate as the source
on HD TiVos. The default setting should work fine for most transfers.<br>

      <strong>Example Settings:</strong> 29.97, 23.98, 25, 59.94 </p>

      </div>

      <div id="help-audio_fr" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>audio_fr</strong>
      </p>

      <p> <strong>Default Setting:</strong> 48000<br>

      <strong>Valid Entries:</strong> 44100, 48000<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> Sets the audio sampling frequency.
Defaults to frequency of the source file for better audio sync if
it is 44100 or 48000. Otherwise 48000 is used.<br>

      <strong>Example Settings:</strong> 44100, 48000 </p>

      </div>

      <div id="help-audio_ch" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>audio_ch</strong>
      </p>

      <p> <strong>Default Setting:</strong> blank (same as source)<br>

      <strong>Valid Entries:</strong> any number compatible with ffmpeg and the audio codec selected<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> Sets the number of audio channels
used by ffmpeg.  ffmpeg will retain the same number of
channels as the source file by default.  The default setting should
work fine for most transfers unless the default audio_codec is changed.
Change this setting to 2 if you do not want to retain 5.1 audio.  A bug
in ffmpeg will sometimes move the center audio channel to the left or
right speaker.  Setting this option to 2, on an as needed basis, or
permanently, will correct this at the loss of 5.1 audio.  But this
should only be necessary on rare occasions where the source file is an
mkv or xvid with ac3 5.1 audio bitrate above 448k.<br>

      <strong>Example Settings:</strong> 2, 6 </p>

      </div>

      <div id="help-audio_codec" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>audio_codec</strong>
      </p>

      <p> <strong>Default Setting:</strong> ac3<br>

      <strong>Valid Entries:</strong> mp2, ac3<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Advanced<br>

      <strong>Description:</strong> Sets the audio codec used by
ffmpeg during transcoding.
pyTivo defaults to ac3 in order to retain 5.1 audio should the
source contain it.  pyTivo also checks the audio codec and bitrate
of the source and uses '-acodec copy' if it is compatible. Otherwise
the Default Setting is used.  Specifying an audio codec will disable
these features and pyTivo will re-encode all audio using the codec
specified.<br>
  
Allowing pyTivo to select '-acodec copy' whenever possible will 
generally produce the best results. This is meant to eliminate 
garbled audio during transcoding when the source contains audio
glitches that cause ffmpeg to lose synchronization.  This will also 
prevent the center audio channel from being moved to the right
front speaker by ffmpeg when transferring mkv's and xvid's with audio
bitrate of 448k or less.<br>
  
You may want to change this setting to mp2 if you only have an S2,
or have specified a per tivo section for an S2, and do not wish to
retain 5.1 audio for possible transfer to an S3 Tivo or back to the
PC should the need arise.  This will slightly reduce the amount of
disk space used and allow for more recordings on an S2 Tivo. 
In this case, you will want to specify audio_codec=mp2, audio_ch=2,
and audio_br=192k.  These are the settings normally used by the S2
for recordings.<br>

      <strong>Example Settings:</strong> mp2, ac3 </p>

      </div>

      <div id="help-shares" style="position: absolute; left: 0px; top: 0px; visibility: hidden;">
      <p align="center"><strong>shares</strong>
      </p>

      <p> <strong>Default Setting:</strong> Blank,
which is equivalent to allow all shares on this TiVo.<br>

      <strong>Valid Entries:</strong> The name of any share
in your pyTivo.conf file. A comma separated list.<br>

      <strong>Required:</strong> No<br>

      <strong>Skill:</strong> Easy<br>

      <strong>Description:</strong> Only the shares listed
in this setting will be visible on this TiVo. Will ignore invalid
shares. If no valid shares are listed or the setting does not exist,
all shares will be visible on this TiVo.<br>

      <strong>Example Settings:</strong> Movies, Kids Stuff
      </p>

      </div>
<!-- END HELP SECTIONS --> </div>

      </td>

    </tr>

  </tbody>
</table>
</center>
</body>
</html>
